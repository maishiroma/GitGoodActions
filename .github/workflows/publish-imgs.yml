# nix-garage GitHub Actions Workflow for publishing images to Docker Hub

### Workflow
# 1. We want this to be ran manually i.e. with a comment in a PR. To do this, we can have a release process where we update what is currently out in prod via a PR
# 2. Once the PR is made, we then have someone (who is an approver) comment in the PR "Publish Images" (WIP)
# 3. GitHub Actions will detect this comment being made, and check if the comment was made by an approved person, alongside what they commented.
# 4. If it matches, we fire off this job, where we log into docker.io with nwiauto (also pass in the password via a secret declared in the repo)
# 5. Once we logged in, we then execute the script "publish-imgs", which will publish the image passed into it.

name: Publish Image

on:
  # This job will be fired off when a comment has been made in an issue (which also impliitly includes PRs)
  issue_comment:
    types: [created]

jobs:
  build:
    name: Publish Image to Dockerhub
    
    # Running on a GitHub hosted runner
    runs-on: ubuntu-18.04

    # Checks if the comment contains the word 'publish'
    # As well as if the comment was made in a PR
    if: > 
      startsWith(github.event.comment.body, 'publish')
      && startsWith(github.event.issue.pull_request.url, 'https://')

    steps:
      # Checks out this repository to the runner
      - uses: actions/checkout@v2

      # Verifies if the commenter is an approver, otherwise, the job will output an error
      # For testing sake, I'm using engineers
      - name: Verify that Commenter is Approver
        id: verify
        run: |
          set -x
          approvers_team_id=$(curl -sSf \
          --url https://api.github.com/orgs/Nebulaworks/teams \
          --header 'Authorization: Bearer ${{ secrets.MAISHIROMA_PAT }}' \
          --header 'Content-Type: application/json' | jq -r '.[] | select(.name == "engineering") | .id' \
          )
          
          is_approver=$(curl -sSf \
          --url https://api.github.com/teams/$approvers_team_id/memberships/${{ github.event.comment.user.login }} \
          --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'Content-Type: application/json' | jq -r '.state' \
          )

          if [ $is_approver == "active" ]; then
            echo ::set-output name=status::success
          else
            echo ::set-output name=status::failure
          fi
        continue-on-error: true
      
      # If the user verification went through, we attempt to authenticatie to Docker hub and publish all images
      - name: Prepare Runner and Execute Publish Script
        id: publish
        if: steps.verify.outputs.status == 'success'
        run: |
          set -x
          encrypted_password=$(echo -n $${{ secrets.USER_PASSWORD }} | base64)
          cat << EOF > $GITHUB_WORKSPACE/auth.json
          {
            "auths": {
              "https://index.docker.io/v1/": {
                "auth": "$encrypted_password"
              }
            }
          }
          EOF

          cd $GITHUB_WORKSPACE
          allImgs=""
          for currImgPath in $(ls -d $GITHUB_WORKSPACE/imgs/*/); do 
            currImgName=$(basename $currImgPath)
            if [ $allImgs -z ]; then
              allImgs="$currImgName"
            else
              allImgs="$allImgs, $currImgName"
            fi

            cat << EOF > ./temp.sh
            #!/bin/sh
            nix-shell --run "export REGISTRY_AUTH_FILE=$(pwd)/auth.json; \
            cd $currImgPath && nix-build; \
            sudo cp ./result $GITHUB_WORKSPACE/result; \
            cd $GITHUB_WORKSPACE && ./publish-imgs $currImgName;" \
            EOF
            sudo chmod 744 ./temp.sh

            docker run --rm -v $(git rev-parse --show-toplevel):/repo -w /repo \
            nixos/nix@sha256:af330838e838cedea2355e7ca267280fc9dd68615888f4e20972ec51beb101d8 \
            /bin/sh -c "./temp.sh"
                        
          done
          echo ::set-output name=allImgs::$allImgs
        continue-on-error: false
      
      # Outputs an issue comment if verifying as an approver failed
      - name: Verify Failure Issue Comment
        id: failure_verify_comment
        if: steps.verify.outputs.status == 'failure'
        uses: jungwinter/comment@5acbb   # SHA ref v1.0.2
        with:
          type: create
          body: |
            The user ${{ github.event.comment.user.login }} is not authorized to publish images from this repository.
            
            Comment with a mention to `nebulaworks/approvers` to notify the approvers to publishing new images.
          token: ${{ secrets.GITHUB_TOKEN }}
          issue_number: ${{ github.event.issue.number }}
        continue-on-error: false
      
      # # If all steps above completed sucessfully, this will output a success issue comment
      - name: Success Issue Comment
        id: success_comment
        if: steps.verify.outputs.status == 'success'
        uses: jungwinter/comment@5acbb  # SHA ref v1.0.2
        with:
          type: create
          body: |
            The following docker images: 
            ${{ steps.publish.outputs.allImgs }}
            have been published on [Docker Hub](https://hub.docker.com/u/mshiroma) under user, `mshiroma`.
          token: ${{ secrets.GITHUB_TOKEN }}
          issue_number: ${{ github.event.issue.number }}
        continue-on-error: false